// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  output = "../../../node_modules/.prisma/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Task {
  id            Int           @id @default(autoincrement())
  title         String
  description   String
  categoryId    Int
  category      Category      @relation(fields: [categoryId], references: [id])
  budget        Int?          @default(0)
  deadline      DateTime?
  preview       String?
  address       String?
  tags          Tag[]
  customerId    String
  performerId   String?
  candidates    Candidate[]
  comments      Comment[]
  statusId      Int
  status        Status        @relation(fields: [statusId], references: [id])
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @default(now())
}

model Category {
  id        Int       @id @default(autoincrement())
  title     String
  tasks     Task[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @default(now())
}

model Tag {
  id        Int       @id @default(autoincrement())
  title     String
  tasks     Task[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @default(now())
}

model Candidate {
  id            Int       @id @default(autoincrement())
  performerId   String
  taskId        Int
  task          Task      @relation(fields: [taskId], references: [id])
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @default(now())
}

model Comment {
  id            Int       @id @default(autoincrement())
  userId        String
  taskId        Int
  task          Task      @relation(fields: [taskId], references: [id])
  text          String
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @default(now())
}

model Status {
  id            Int       @id @default(autoincrement())
  title         String    @unique
  tasks         Task[]
}

